openapi: 3.1.0
info:
  title: Spectropic API
  version: 1.0.0
servers:
  - url: https://api.spectropic.ai
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
        errors:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
              message:
                type: string
    Job:
      type: object
      properties:
        id:
          type: string
          example: "12345678-1234-1234-1234-123456789012"
        status:
          type: string
          example: "succeeded"
        eventName:
          type: string
          example: "whisper_diarization"
          description: Name of the event
        quantity:
          type: integer
          example: 126
          description: Quantity of the event, e.g. number of seconds of audio, or number of tokens     
        output:
          type: object
          description: Output of the job, saved as JSON, deleted after 24 hours
        createdAt:
          type: string
          format: date-time
          example: "2024-01-01T00:00:00Z"
          description: Timestamp of the creation of the job
        updatedAt:
          type: string
          format: date-time
          example: "2024-01-01T00:00:00Z"
          description: Timestamp of the last update of the job
        
    Transcripts:
      type: array
      items:
        $ref: "#/components/schemas/Transcript"
    Transcript:
      type: object
      properties:
        jobId:
          type: string
          example: "12345678-1234-1234-1234-123456789012"
          description: Unique identifier of the transcript job
        numSpeakers:
          type: integer
          example: 2
          description: Number of speakers in the transcript. Either detected value if input was null or value is equal to user input
        language:
          type: string
          example: "en"
          description: Language of the transcript. Either detected value if input was null or value is equal to user input. In form of ISO 639-1 code, like "en" or "de"
        inferenceStart:
          type: string
          format: date-time
          example: "2022-01-01T00:00:00Z"
          description: Timestamp of the start of the inference
        inferenceEnd:
          type: string
          format: date-time
          example: "2022-01-01T00:05:00Z"
          description: Timestamp of the end of the inference
        segments:
          type: array
          description: Array of segments, each segment contains spoken text, speaker, start and end time in seconds with decimal and a list of word objects (view below)
          items:
            type: object
            properties:
              start:
                type: number
                format: float
                example: 0.1
                description: Start time of the segment in seconds with decimal
              end:
                type: number
                format: float
                example: 5.0
                description: End time of the segment in seconds with decimal
              text:
                type: string
                description: Spoken text of the segment
              speaker:
                type: string
                description: Speaker of the segment
              avg_logprob:
                type: number
                format: float
                example: -0.5
                description: Average log probability of the segment
              words:
                type: array
                items:
                  type: object
                  properties:
                    start:
                      type: number
                      format: float
                      example: 0.1
                      description: Start time of the word in seconds with decimal
                    end:
                      type: number
                      format: float
                      example: 0.5
                      description: End time of the word in seconds with decimal
                    word:
                      type: string
                      description: Spoken word
                    probability:
                      type: number
                      format: float
                      example: 0.9
                      description: Probability of the word, can also be described as confidence score

security:
  - bearerAuth: []
paths:
  /v1/test:
    get:
      summary: Test endpoint
      operationId: test
      tags:
        - Test
      responses:
        "200":
          description: Returns a test message
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  success:
                    type: boolean
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      summary: Test endpoint
      operationId: test
      tags:
        - Test
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                webhook:
                  type: string
                  description: URL to which the test message will be sent
                  examples:
                    - "https://quick-ability-06.webhook.cool"
      responses:
        "200":
          description: Returns a test message
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  success:
                    type: boolean
  /v1/transcribe:
    post:
      summary: Creates a new transcript
      operationId: createTranscript
      tags:
        - Transcripts
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  description: Direct URL of an audio or video file. Max 2GB. Make sure to use a publicly accessible URL. Must be served over HTTPS.
                  examples:
                    - "https://example.com/file.mp3"
                model:
                  type: string
                  description: Model used for the transcript. 'standard' or 'enhanced', default is 'standard'. 
                  examples:
                    - 'standard'
                numSpeakers:
                  type: integer
                  description: Number of speakers in the transcript. If null, the number of speakers will be detected automatically
                  examples:
                    - 2
                language:
                  type: string
                  description: Language of the transcript. If null, the language will be detected automatically. In form of ISO 639-1 code, like "en" or "de"
                  examples:
                    - "en"
                vocabulary:
                  type: string
                  description: Vocabulary used for the transcript. Similar to the "initial_prompt" parameter of Whisper. Provide acronyms, names and foreign words
                  examples:
                    - "Spectropic, AI, LLama, Mistral, Whisper."
                webhook:
                  type: string
                  description: URL to which the transcript will be sent once it is ready. Make sure to use a publicly accessible URL
                  examples:
                    - "https://example.com/webhook"
              required:
                - url
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: Audio or video file. Max. 100 MB (contact if need more)
                  examples:
                    - "file.mp3"
                model:
                  type: string
                  description: Model used for the transcript. 'standard' or 'enhanced', default is 'standard'. 
                  examples:
                    - 'standard'
                numSpeakers:
                  type: integer
                  description: Number of speakers in the transcript. If null, the number of speakers will be detected automatically
                  examples:
                    - 2
                language:
                  type: string
                  description: Language of the transcript. If null, the language will be detected automatically. In form of ISO 639-1 code, like "en" or "de"
                  examples:
                    - "en"
                vocabulary:
                  type: string
                  description: Vocabulary used for the transcript. Similar to the "initial_prompt" parameter of Whisper. Provide acronyms, names and foreign words
                  examples:
                    - "Spectropic, AI, LLama, Mistral, Whisper."
                webhook:
                  type: string
                  description: URL to which the transcript will be sent once it is ready. Make sure to use a publicly accessible URL
                  examples:
                    - "https://example.com/webhook"
              required:
                - file
      responses:
        "200":
          description: Returns a status of the transcribe job
          content:
            application/json:
              schema:
                type: object
                properties:
                  jobId:
                    type: string
                    example: "12345678-1234-1234-1234-123456789012"
                  message:
                    type: string
                    example: "Job added to queue"
                  status:
                    type: string
                    example: "pending"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /v1/analyze:
    post:
      summary: Analyze transcript
      operationId: analyzeTranscript
      tags:
        - Transcripts
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  description: Transcript text
                action:
                  type: string
                  description: Action to be performed on the transcript. Can be 'summarize', (more actions coming soon).
                  examples:
                    - 'summarize'
                language:
                  type: string
                  description: Language of the transcript. If null, the language will be detected automatically. In form of ISO 639-1 code, like "en" or "de"
                  examples:
                    - "en"
              required:
                - text
                - action     
      responses:
        "200":
          description: Returns a status of the transcribe job
          content:
            application/json:
              schema:
                type: object
                properties:
                  jobId:
                    type: string
                    example: "12345678-1234-1234-1234-123456789012"
                  text:
                    type: string
                    example: "Summarized text"
                  status:
                    type: string
                    example: "succeeded"
  /v1/jobs:
    get:
      summary: Get all jobs
      operationId: getJobs
      tags:
        - Jobs
      responses:
        "200":
          description: Returns a list of all jobs, without the output
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Job"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /v1/jobs/{jobId}:
    get:
      summary: Get all jobs
      operationId: getJobs
      tags:
        - Jobs
      parameters:
        - name: jobId
          in: path
          required: true
          description: Unique identifier of the job
          schema:
            type: string
            example: "12345678-1234-1234-1234-123456789012"
      responses:
        "200":
          description: Returns a single job by ID
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/Job"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
webhooks:
  newTranscript:
    post:
      requestBody:
        description: Transcript object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Transcript"
