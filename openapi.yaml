openapi: 3.0.0
info:
  title: Spectropic API
  version: "1.0"
  description: API for audio transcription with diarization

servers:
  - url: https://api.spectropic.ai
    description: Version 1 API

components:
  schemas:
    Error:
      type: object
      properties:
        message:
          type: string
        errors:
          type: array
          items:
            type: object
            properties:
              message:
                type: string
              field:
                type: string

    TranscriptionJob:
      type: object
      properties:
        id:
          type: string
          format: uuid
        status:
          type: string
          enum: [created, queued, running, succeeded, failed]
        model:
          type: string
        action:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        output:
          type: object
          description: Transcript object if job is succeeded, available for 24 hours after job completion
          nullable: true
          allOf:
            - $ref: "#/components/schemas/Transcript"

    TranscriptionJobSummary:
      type: object
      properties:
        id:
          type: string
          format: uuid
        status:
          type: string
          enum: [created, queued, running, succeeded, failed]
        model:
          type: string
        action:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    JobsList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/TranscriptionJobSummary"
        total:
          type: integer

    Transcript:
      type: object
      properties:
        jobId:
          type: string
          example: "12345678-1234-1234-1234-123456789012"
          description: Unique identifier of the transcript job
        numSpeakers:
          type: integer
          example: 2
          description: Number of speakers in the transcript. Either detected value if input was null or value is equal to user input
        language:
          type: string
          example: "en"
          description: Language of the transcript. Either detected value if input was null or value is equal to user input. In form of ISO 639-1 code, like "en" or "de"
        inferenceStart:
          type: string
          format: date-time
          example: "2022-01-01T00:00:00Z"
          description: Timestamp of the start of the inference
        inferenceEnd:
          type: string
          format: date-time
          example: "2022-01-01T00:05:00Z"
          description: Timestamp of the end of the inference
        segments:
          type: array
          description: Array of segments, each segment contains spoken text, speaker, start and end time in seconds with decimal and a list of word objects (view below)
          items:
            type: object
            properties:
              start:
                type: number
                format: float
                example: 0.1
                description: Start time of the segment in seconds with decimal
              end:
                type: number
                format: float
                example: 5.0
                description: End time of the segment in seconds with decimal
              text:
                type: string
                description: Spoken text of the segment
              speaker:
                type: string
                description: Speaker of the segment
              avg_logprob:
                type: number
                format: float
                example: -0.5
                description: Average log probability of the segment
              words:
                type: array
                items:
                  type: object
                  properties:
                    start:
                      type: number
                      format: float
                      example: 0.1
                      description: Start time of the word in seconds with decimal
                    end:
                      type: number
                      format: float
                      example: 0.5
                      description: End time of the word in seconds with decimal
                    word:
                      type: string
                      description: Spoken word
                    probability:
                      type: number
                      format: float
                      example: 0.9
                      description: Probability of the word, can also be described as confidence score

paths:
  /v1/transcribe:
    post:
      summary: Create a new transcription job
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  format: uri
                webhook:
                  type: string
                  format: uri
                vocabulary:
                  type: string
                  maxLength: 512
                language:
                  type: string
                model:
                  type: string
                  enum: [standard, enhanced]
                  default: standard
                numSpeakers:
                  type: integer
                  minimum: 1
                  maximum: 25
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                webhook:
                  type: string
                  format: uri
                vocabulary:
                  type: string
                  maxLength: 512
                language:
                  type: string
                model:
                  type: string
                  enum: [standard, enhanced]
                  default: standard
                numSpeakers:
                  type: integer
                  minimum: 1
                  maximum: 25
      responses:
        "200":
          description: Job created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  jobId:
                    type: string
                    format: uuid
                  message:
                    type: string
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "402":
          description: Payment required
        "404":
          description: Team not found

  /v1/jobs:
    get:
      summary: List all jobs
      parameters:
        - name: offset
          in: query
          schema:
            type: integer
            default: 0
        - name: take
          in: query
          schema:
            type: integer
            default: 10
      responses:
        "200":
          description: List of jobs
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobsList"
        "404":
          description: Team not found

  /v1/jobs/{jobId}:
    get:
      summary: Get job details
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Job details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TranscriptionJob"
        "400":
          description: Invalid job ID
        "404":
          description: Job not found

  /v1/test:
    get:
      summary: Test API connection
      responses:
        "200":
          description: Test successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
    post:
      summary: Test webhook
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                webhook:
                  type: string
                  format: uri
      responses:
        "200":
          description: Webhook test result
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  body:
                    type: object
